image: docker:latest


before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY


stages:
  - build
  - deploy

test-build:
  stage: build
  script:
    - docker build -f compose/test/django/Dockerfile -t ${CI_REGISTRY}/${CI_REGISTRY_USER}/veyron_kolesa/test_django:${CI_COMMIT_SHA} --build-arg HTTP_PROXY=${HTTP_PROXY} --build-arg HTTPS_PROXY=${HTTPS_PROXY} .
    - docker push ${CI_REGISTRY}/${CI_REGISTRY_USER}/veyron_kolesa/test_django:$CI_COMMIT_SHA
    - docker build -f compose/test/postgres/Dockerfile -t ${CI_REGISTRY}/${CI_REGISTRY_USER}/veyron_kolesa/test_postgres:${CI_COMMIT_SHA} --build-arg HTTP_PROXY=${HTTP_PROXY} --build-arg HTTPS_PROXY=${HTTPS_PROXY} .
    - docker push ${CI_REGISTRY}/${CI_REGISTRY_USER}/veyron_kolesa/test_postgres:$CI_COMMIT_SHA
  only:
    - test

test-deploy:
  image: buffalobill571/alpine-ssh-pip-fabric:v0.1.0
  stage: deploy
  script:
    - fab test deploy
  before_script:
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
  only:
    - test
