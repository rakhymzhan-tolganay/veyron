version: '3'

volumes:
  local_postgres_data: {}
  local_postgres_data_backups: {}
  local_redis_data: {}
  local_elasticsearch_data: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: nomad_auto_unlim_parser_local_django
    depends_on:
      - postgres
#      - mailhog
    volumes:
      - .:/app
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - "9000:8000"
    command: /start
    networks:
      - masternet
      - db
      - cache
      - app

  postgres:
    build:
      context: .
      dockerfile: ./compose/test/postgres/Dockerfile
    image: nomad_auto_unlim_parser_test_postgres
    volumes:
      - local_postgres_data:/var/lib/postgresql/data
      - local_postgres_data_backups:/backups
    env_file:
      - ./.envs/.local/.postgres
    networks:
      - db

#  mailhog:
#    image: mailhog/mailhog:v1.0.0
#    ports:
#      - "8045:8025"
#    networks:
#      - app

  redis:
    image: redis:3.2
    command: redis-server --appendonly yes
    volumes:
      - local_redis_data:/data
#    ports:
#      - 6379:6379
    networks:
      - cache


  celeryworker:
    <<: *django
    image: nomad_auto_unlim_parser_local_celeryworker
    depends_on:
      - redis
      - postgres
#      - mailhog
    ports: []
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: nomad_auto_unlim_parser_celerybeat
    depends_on:
      - redis
      - postgres
#      - mailhog
    ports: []
    command: /start-celerybeat

  flower:
    <<: *django
    image: nomad_auto_unlim_parser_flower
    ports:
      - "5557:5555"
    command: /start-flower

#  elasticsearch:
#    image: elasticsearch:7.2.0
#    ports:
#      - "9200:9200"
#      - "9300:9300"
#    volumes:
#      - local_elasticsearch_data:/usr/share/elasticsearch/data
#    environment:
#      - discovery.type=single-node


networks:
  masternet:
    external: true
  app: {}
  db: {}
  cache: {}
